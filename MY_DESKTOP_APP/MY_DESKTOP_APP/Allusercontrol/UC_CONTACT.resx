<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgREhITEBASFRIVFhUZGBUYDhYVFxcVFhUWFxYVFhcY
        HSggGBolGxgYITEhJikrLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBorJSAlLS0tLS0rLS0tKy0t
        LS0tLS0tLS0tLS0tLy8rLS0tLS0tLi4tKystLS0vLS0tKy8vLi3/wAARCADhAOEDAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAQQHAwL/xAA+EAACAQICBgcGBAQGAwAAAAAAAQIDEQQFBiExQVGB
        EiJhcZGhsRMyQlLB0SNDYnKSotLhM3OCsvDxFFPC/8QAGwEBAAIDAQEAAAAAAAAAAAAAAAQFAQMGAgf/
        xAA4EQACAQIDBAgGAgEEAwEAAAAAAQIDBBEhMQUSQVEiYXGBkaGx0QYTMsHh8BRC8SNDUnIzYpJT/9oA
        DAMBAAIRAxEAPwDuIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPKviKMF
        ecoxXa7GVFvQ01rilQW9VkkutkZiNIcKvcUpcuivPX5G+NvJ6lJX+JLaGVNOXkvPPyI+rpFin7sYR8ZP
        x1ehsVvHiVNX4kuZfRGMfFv7ehqzzjHv8xrujFfQ2KjBcCDPbN9P/ca7El9jyeYYx/mz/iZn5ceRoe0b
        t61ZeLCzDGf+2f8AGx8uPILaF2tKsvFnpDNsevzXzSfqjDpQ5G6G2L6OlV9+D9UbVLSHGL3lCXJp+Kf0
        PDt48CbS+I7uP1qMu7B+T+xv0NI8O/fhKPausvv5Gp28uDLWh8S0JZVYuPZmvs/Ik8Ni8PU9ycZdz181
        tRplCUdUXdveULhY0pp+vhqe55JIAAAAAAAAAAAAAAAAAAAAAAABr4zG4ekrzlbgtrfcj3CEpaES7vaF
        rHeqyw6uL7EV7G6QV5aqa6C46nL7IlQt4r6szlLz4hr1OjQW6uesvZefaRFScpO8m2+Ld2b0sNDn5zlO
        W9Ntvm82YMnkAAAAAAAAAABSad1qfFamDKbTxWTJTBZ9ioap9ePb73J7+ZonQi9Mi8s9vXNHKp0116+P
        vj2lhwOZYat7j174vU19+RFnTlDU6yy2lb3a/wBN58nr+9ayNw1k8AAAAAAAAAAAAAAAAAAAEFmufxje
        NGzlvltiu7i/LvJNO3xzkc1tLb0aeNO3zfGXBdnN+XaVurVnJuUm23tbZMSSWCOQqVJ1JOc223xZ8g8A
        AAAAAAAAAAAAAAAAzGTTum01sadmu4YGYtxeKeDRP5XpA9Ua/Kdv9y+pFqW/GPgdTs74gawp3X/17+67
        +ZYoyTV07p7yIdYmpLFaGQZAAAAAAAAAAAAABiTSV27JbwYbSWL0KpnWdSqXhTdqe975faPqTqNDdzlq
        cVtbbLuMaVF4Q4vjL8evYQxIOfAAAAAAPXD4etUdqcXJ9i2d72I8yko5tm6hb1a8t2lFt9X3ei7yYw+j
        WIfvzjHsS6T+i9TRK5itEXtD4brSzqzUezN/Zepuw0Zwu+dR84r6Gt3MuSLGHw1br6pyfh7CejWE3TqL
        nF/QwrmXJCXw1bPSUl3r2NSvozVXuVE+yUbeav6GyNyuKINb4ZqLOlUT6msPNY+hEYvB4ik7VINdu1Pu
        a1EiM4y0ZRXNnXtnhVi118PHT7mueiMAAAAAASeT5vUovoyu6b2rfHtj9jTVoqea1LfZe1p2b3JZw5cu
        te33LfRqwnFSi04vY0QGmngzu6VWFWCnB4p6M+zBsAAAAAAAAAAAAKln+b+0bp03+Gtr+Z/0+pOoUd3p
        PU4nbO1f5DdGk+gtX/y/Hr2EKSSgAAAAAuATmT5FKpadW8Ybo7HL7LzI1Wvu5R1Og2ZsOVdKrXyjwXF+
        y831Fno0acEowiopbkrEJtt4s7GlRhSioU0kuSPuUopXbSXFswe5SUVi3gjSqZvly21ocn0vQ2KjN8CB
        Pa1lHWqu7P0xMQznLn+bHndepl0Z8jzHa9lLSqu/L1N2nUhJXjJNcU7ryNbTWpPhUhUW9BprqzE4Rkmp
        JNPamroJ4aGZwjOLjJYp8yuZvo/a86C74f0/b/ol0rjhLxOV2lsHBOpbd8fb28ORXSWcsAAAAAASeS5r
        KhK0rum3rXB/MjTWpb6y1LbZW05Wc92WcHquXWvuuPaXOEotJp3T1p8UVzWB3sZKSUovFMyD0AAAAAAA
        AAQGk2adFeyg+s11nwi93e/TvJVvSx6TOb29tH5cf49N5v6upcu1+naVUmnHmQAAAAATmjmVKo/a1F1E
        +qvma3vsXqRq9Xd6K1Oh2JstVn8+quitFzfPsXm+wthBOzIPN8/hTbhStKa2v4Y/dkmlbuWctDn9pbcj
        Qbp0M5cXwXu/TyKxisXXqO9Sbl3vUu5bETIxUdEclcXNW4e9Vk36dy0PI9GgAH3Qr1YO8JOL4p28eJhx
        UsmbKVWpRlvU5NPqLFlWkado17LhPYv9S3d+zuIlS24w8DqNn7f3mqdzl/7cO/l26dhY0RDqCuaS5UrO
        tTWte+uK+bv4ku3q/wBX3HL7d2Wmnc0ln/Zff38StEw5MAAAAAAsGjGZ2fsZvU/cfB/L3Pd/ci3FLHpL
        vOl2DtHcl/GqPJ/T1Pl38OvtLQQjrwAAAAAAAa2Y4yFGnKb3bFxb2I904OcsERb26ja0ZVZcNOt8EUGr
        VnKTlJ3k3dvtZaJJLBHzipUlUm5zeLebPi5k8C4AuALgHvgcPKrUjBfE9vBbW/A8zluxbJFrbyuK0aUe
        L8FxfgdAo0oQioxVkkkl2Iqm23iz6TTpxpwUILBLJEJpLmrpr2VN2nJa38sXw7WSbelvdJ6FBtzaTox+
        RSfSer5L3fku4qZOONwFwBcAXAFwBcAsejGau6ozep+4+H6ft4cCJcUv7rvOo2FtJpq2qP8A6v7e3hyL
        M0iEdW1jkyiZzgvY1ZRXuvXH9r3cndFpSnvxxPnm07P+LcOC0ea7H7aGjc2FeLgC4AuAZTYM6ZovOSY9
        Vqab9+OqXfx57SsrU9yWHA+g7Kvf5dBSf1LJ9vPv1JA1FkAAAAAAVDSzHdOoqafVht/c19F6sn20MI73
        M4z4gu/mVlRWkde1+y9WQRKOfAAAAAALHodh05VKj3JRXPW/ReJDu5ZKJ03w3QxnOs+GS7839izVakYx
        cnsSbfcldkNLF4HVVJqnBzlolj4HO8TiJ1JynLbJ3+y5LVyLaMVFYI+aV60q1SVSWreP47tDyPRqAAAA
        AAABmMpJpp2ad0+DWxgym4tNarQ6Fl2JVWlCfzLX2PY143KmpHdk0fSbO4VxQjV5rz4+ZEaYYdOnCpvj
        Kz7pf3S8Tfaywk4lL8R0N6jGqv6vDuf5wKmTzjwAAAAACT0dx3sqyu+rO0X3/C/H1Zorw3odha7Gu/49
        yk/plk/s/H1LyVp3wAAAAPHF1404Tm9kU34LYeox3mkabisqNKVSWiTZzmpUlJuUtrbb727st0klgj5r
        Ocpycpat4vvMXB5FwBcAXAFwC5aIwSoX4zk/Cy+hX3T6Z23w/HC0x5yft9jY0kqOOHqdtl4ySfkeLdY1
        ESNsz3LKeHHBeLSKLcszgRcAXAFwBcAXAFwBcAuGh9RujJfLNrxSfq2V90sJ49R2nw7PetXHlJ+eD+5u
        aQwvh6vYr+DT+h4oPCoiZteO9ZVOzHwzKHcsz5+LgC4AuALgGLgHQcmxftaMJvbaz/ctT+/MqqsNybR9
        E2dc/wAi2hUeuj7VkzdNZOAAAIHTDEdGjGG+cl4R1vzsSrSOM8eRQfENbct1TX9n5LP1wKdcsDjRcAXA
        FwBcAXALtolK+HXZKS87/Urbpf6h2+wHjZpcm/XE+9KIt4afY4v+ZGLZ/wCojZtyO9ZT6sH5oo1yzOEF
        wBcAXAFwBcAXAFwC36GRfspvjN+UYlfdvprsOx+HI4W8nzl9kSGfyth637WvHUaqH/kRYbVeFnU7PUoF
        y1PnwuALgC4AuALgFn0LxH+JT7pL0l/8kK7jpI6j4brfXSfVJej+xaCEdSAAAU3TKtetGO6MPOTd/JIs
        bSPQb6zjfiGpvXEYco+r/CIC5KKEXAFwBcAXAFwC1aFYhWq0+DUlzVn6LxIN5HNSOq+HK3RnS60/HL7F
        gxuHVSnOD+KLXitTIkJbskzoLmiq1KVN8U0c2kpJtNWabTXBrU0XGuh82cXFtS1Wpi5kwLgC4AuALgC4
        AuAdCyLCulQpxa61rvvlra5XtyKmtPem2fQdmW7oWsIPXV9rz8tDR0wxCjQUd85Jcl1n6LxNlrHGePIh
        fEFbctdz/k15Z/YpdyyOLFwBcAXAFwBcAldGK/RxMOEulF81deaRouI402Wmxau5eQ68V5Y+qRfCrO8A
        AAOfaR1OliavY0vCKRa26wpo4Ha8968qdy8EiNubitFwBcAXAFwBcA38kxyo1oTfu+7L9r38nZ8jXWp7
        8Gifs26/jXEZvTR9j9smdERUH0Ep+luVuMvbQXVlbp9ktl+5+veWFrVxW4zkdu2DhP8AkQWT16nz7/Xt
        K5clnOi4AuALgC4AuATOjWWOtUUpL8ODu+2W1R+r/uR7iruRwWrLjY9g7irvyXRj5vgvu/yXorDuCi6U
        45Va3RT6tO8V+74n6LkWdtT3YY8zh9t3Xz7ndWkcu/j7dxDXJBTi4AuALgC4AuAbGX1OjVpPhOH+5Hmo
        sYtdRItZbleEuUl6nSymPpAAABzbOJXr1v8AMl6lxS+hdh87v3jdVH/7M07mwiC4AuALgC4AuAAC5aJ5
        upxVGb68V1X80Vu716cyvuqOD31oddsTaCqQVvN9Jada916d5YakISTUkmmrNNamnuIibTxRfzjGcXGS
        xTKXnWjlam3OinOn8u2Uf6l5+pY0blSylkzj9obFnRbnRW9HlxXuvP1IC5KKIXAFwBcAmMmyHE12pSvC
        l8zWuS/Svrs7yPVuIwyWbLaw2RVuWpS6MOfF9nvp2l4wuHpU4qEFaK2L/m1lbKTk8WdpRowowVOCwSIv
        STN1Qh0Yv8Wa1fpW+T+nabrejvvF6IrdrbQVtT3Yvpy06uv26yh3LQ4cXAFwBcAXAFwBcA+oOzXevUw9
        D1HKSfWdTKQ+mgAAHNc4Vq9b/Ml6lzS/8a7D55frC6qf9maZsIgAAAAAAAABmE5JpxbTTumnZp8UYaTy
        Z6jJxalF4NF1yLSOlVtCs1GpsT2Rn9n2eHArq1s45x0Ov2btmFZKnWylz4P2fV4ciwEQvSPx2TYCtrnT
        XS+ZdV82tvM2wrzhoyDc7Ntrh4zjnzWT8vuRNXQ/D/DWmu+Kl6WJCvJcUVc/h2k/pm124P2MU9DqPxVp
        Pugl63DvXwR5j8OU/wC1R9yS9yTwWQZdSd1DpS4yfS8FsXgaZ3FSXEsrfZNrQeKji+bz/BKGgsiGzvP6
        FBOMbTq/LfVHtlw7tvqSKNvKpm8kVO0Nq07ZOMc58uXb7avzKNiMRVqSc5u8ntf/ADYizjFRWCOLq1Z1
        Zuc3i2eZ6NYAAAAAAAABmG1d69TD0PUVjJI6qijPpgAABznSSHRxNZfqT8YplvbvGkjgtqw3byp24+KR
        G3NxXi4AuALgC4AuAEBgT+V6L4qpaVV+zjwt13y+Hn4EWpdRjlHP0Luz2HWq9Kr0V5/jv8C04DJsBRt0
        Ka6XzPrS8Xs5EGdac9WdJbbOt7f6I583m/3sJA1E4NoA8J43CR96rTXfUivqelCT0TNMrijH6ppd6MQx
        +DeyrTfdUi/qZdOS1TMRuqMvpnF96PeLT2M8G5NPQyDJqY7LMFW/xKcW+NrS/iWs2Qqzh9LItxZULhf6
        kU+vj46lYzPROtG8qEumvldlLk9j8ibTu08p5HO3ewJw6VB4rk9fHR+RWpxlFtSTTW1NWa70yYs80c/K
        Li8JLB9Zi4MC4AuALgC4AuAe+Ah0qtKPGcF/MjzN4Rb6jdbQ3q0I85L1OolIfRwAACi6bUejXUt04Lxi
        2n5WLOzeNPDkzjtv0925Uua9P1FfuSykFwBcAXAFwD3wWEr1pqFON5PwS4t7keZzjBYyN1C3qV5qnTWL
        /c2XvJcgw2HtJ9er8zWzsit3ftKutcSqZaI7Kw2VStVvPOXPl2fuJMEctCEzPSbAUrqL9pNbovUn2y2e
        FyTTtZzzeSKi62zb0OjHpPq073/kreN0pzKp7rVNcIrXzk/pYmQtKcdcyhr7buqn0tRXVr4v7YERWxFa
        fvzlL90m/UkKKjoirqVZ1Prk32ts89Rk14IagMEfdKrUjrhKUX+mTXoYaT1PcJyg8YNrseHoSmD0lzOn
        tn01wmr+a1+Zona05cMOwsqG2LulrLeXX76liy7SvBVLKqvZy4t3j/Fu5kSpaTjnHMvbXbtCplU6L8vH
        3LBGSaundPeRC6TTWKI/N8mwuIXWVprZNLWu/iuw3Uq0qby05EG92dSuo9LJ8GtfyihZpl2Iw8+jUXdJ
        bJLs+xaU6kaixRxl3Z1LWe5UXY+D/eRp3NhFFwBcAXAFwCV0Xo9PE0uEbyfKLt52NFy8KTLLZFPfvIdW
        L8F74HRSoO6AAAKzpzhr0oVF8ErPul/dIm2UsJOPMoPiCjvUY1F/V+T/ADgUm5ZHJC4AuALgGxgMJWrT
        jTpq8n4Jb5PsR4nNQjvM329vOvUVOms35dbOjZRldDDw6MNbfvS3yf27Coq1ZVHizubKyp2tPchrxfFn
        tjsbh6MHOpK0V4t8Et7PMISm8Im64uKdCG/UeC/dCiZzpFiq94xvCl8qetr9T+mzvLOjbRp5vNnHX21a
        tzjFdGPLn2+2naQ1ySVQuALgC4AuALgC4AuASWUZ3i8O+q+lDfBvVy+VmmrQjU115k+y2jWtX0XjHk9O
        7kX3Ks0w2Ij0qb1r3ov3ovtX1KqrSlTeDOytLyldQ3oPtXFHrj8FQrQcKiun4p7mnuZiE5QeKNlxb07i
        m6dRYr9zRznN8trYeo4S1p64ytqkvvxRb0qqqRxRw17Zztam5LTg+a/dTRubSGLgC4AuAWvQPDXlVqPc
        lBc9cvSJAvZZKPedJ8PUelOr3L1f2LiV51AAABrZnhFWpVKb+KLS7HtT5OzPdOe5JSNF1QVejKm+K/x5
        nLJJptNWadmuDW1F5qfPGmng9TFzJgXAMxTbSSu3qS3tvYkYMpNvBHRtHMojh6eu3tJa5PhwiuxFPcVv
        mSy0O42ZYK1pZ/U9fbuN3McdRoU5VKj1Ldvb3Jdprp03OW6iXc3ELem6k9F59RzfNczr4ifTm9Xwxvqi
        uC7eL3lxSpRpxwRwt3d1Lqpvz7lwX7xfE07m0ii4AuALgC4AuALgC4AuALgHvgsZXozU6crSXg1vTW9H
        icFNYSN1CvOhNVKbwf7k+o6PkuaUcTT6cdUlqlG+uL+3BlPWpOnLBnc2N7C6p78deK5P90M5xltLEU3C
        Wp7Yy+WW593EUqrpyxRm9tI3VJwlrwfJnNMRRqU5ShNWlF2a7fsXMWpLFHB1Kcqc3CazR53PRrFwBcA6
        To1gvY4eEWrSl1pd8tduSsuRTXE9+o2d3su3+RbRi9Xm+1+2hKGgsAAAAAc/0yy/2VfppdWrr7pL3l6P
        my2tKm9DDijjdtWvyq++tJZ9/H38SAuSinFwCz6E5YpzdaS6sNUe2e98l69hCvKu6txcS+2HZ783XlpH
        Tt/H7oXdtFYdYc30kzd4iq7P8KF1BceM+foXFvR+XHPVnD7TvndVcvpWnv3+hE3JBWi4AuALgC4AuALg
        C4AuALgC4AuAb2T5nUw9VTjrWyUfmjvXfvRqq0lUjgyXZXcrWqqkdOK5r90Om0K1OcYyi7xkk0+xlLJO
        LwZ3lOcZxUovJlX04yxNKvFa1aM/2/DLk9XNcCdZVc9x9xz+3bPGKuI6rJ9nB937oUy5YnMC4BJ6OYD2
        9eEWurHrS/at3N2XiabipuQbJ+zbX+RcRi9Fm+xe50wpTuwAAAAACOz7LY4ijKHxbYvhJbOT2czdQq/L
        niQ7+0VzRcOOq7f3I5hOMk2mrNNprg1qaLpZ5o4NpptPVCKbaSV29SXFvYjISbeCOq5Tgo0KMKa+Fa3x
        k9cn43KKrPfm5H0C0t1QoxprgvPiQ+muZezoqnF9ardPsgve8dS5skWdLenvPh6lbtu6+VR+XHWXpx8d
        Cg3LU5AXAFwBcAXAFwBcAXAFwBcAXAFwBcAXALloJmV1KhJ7Lyh3X6y8XfmyuvaWk13nTbBusU6EuGa+
        68c+9lrxFGE4yhJXjJNPuasQIycXijoKlONSDhLR5HKMZQnSnOnLbCTXfZ7ee3mX0JKUVJcT57WpOlUl
        TlqngeNz0azo2ieVuhRvJfiVLSl2L4Y8vVsp7qr8yeWiO12TZ/x6OMvqlm/sv3iTZGLQAAAAAAAFM02y
        Zp/+RTWr8xLdwn9Hy7Sxs6/+2+72Oa21YZ/yIL/t7+/+SH0TwqqYqnfZC83/AKdn8zRIup7tJ9eRW7Jo
        /Nuo48M/DTzwOllMducz0pxvtcTUfww6i7o7f5rl1bQ3Ka68zh9qV/nXUnwWS7vziRJIK8AAAAAAAAAA
        AAAAAAAAAG1leMdGtTqfLJX/AGvVLybNdWG/BxN9rW+TWjU5Py4+R1dNFCfQShad4VQrxmtlSOv90dT8
        uiWtlPGGHI5HbtHcrqa/svNfjAxodkzrT9rNfhwer9U19Ft8O0zd19yO6tWNj2Hzp/NmujHTrf4/eJfy
        pOuAAAAAAAAAMTjFpppNPU09jT3BPAw0msGQmSZDHDVq0ou8JKKhxSu3KL7rR1kqtcfMgk9eJWWWzla1
        pyjo0sOrmvQlsXWVOnOb2QjKX8KbI8I70kuZYVaip05TfBN+ByFzb1va9b73tOgwPnmLebFwBcAXAFwB
        cAXAFwBcAXAFwBcAXAFwBcAXBg6no7iHUw1GW/oJPvj1X5oo7iO7UkjvNn1fmW0JdWHhl9jX0jyZ4pUk
        nboz6z3qDi727bqJ6t6/ysX1GnaNj/KUFjhg8+zDP7EphsPSpwjCCtGKsl2GmUnJ4sn06cacFCCwSPU8
        nsAAAAAAAAAAAAi9J6nRwtd/oa/i1fU32yxqx7SDtKW7a1H1epy0vDhwAAAAAAAAAAAAAAAAAAAAAAdF
        0FqXwqXyzmvO/wBSnvVhV8DsNiSxtUuTfqWEiFsAAAAAAAAAAAAAAAfNSEJJqSTTVmmrpp7mjKbTxRiU
        VJYNZFI0g0QnG9TCpuO+nvX7HvXZt7yyoXifRqeJzV9sZxxnQzX/AB493sVF3V09q2rg+BYFA01kzFzJ
        gXAFwBcAXAFwBcAXAFwBcAXAFwBcAs2QaKYitade9Onw2Tl/Su3/ALIVe8jDKGb8i5sdkTrYTq5R5cX7
        F9w2Ho04qFOKjFbEkVUpOTxZ1VOnCnFQgsEj1PJ7AAAAAAAAAAAAAAAAAAInOdHsDidcl0am6cdT57pL
        vJFG5nS005EC72dRuc5LB81r+Sj5rovmVC7UfaQ+aCbfOO1eaLOld059T6zm7nZVejmlvLmvb/JCXJJW
        i4AuALgC4AuALgC4AuAYuAS2VaP5liLOMOjD55dWPLfLkaKtzTp6vPkidbbOr184rBc3kvyXfJdF8Dh7
        Sf4lRfFJak/0x3d+tlZWu51MlkjpLPZVG36T6Uub+y/WTpFLMAAAAAAAAAAAAAAAAAAAAAAAAjcxyPLa
        +upSXS+ZdWXitvM3U7ipT+lkSvY0K+c4589H4lcxuge+jX5Tjf8Amj9iZDaH/KPgVFXYP/5z8fdexC4n
        RPOoflKa4xmn5Oz8iTG8ovjh2lfU2TdQ/rj2P/BG1ctzCHvUKq76UvWxuVWD0kvEiStq0fqhLwZryhUW
        2Ml/pZ7xRqcZLVPwCjN7E/BjFGFFvRHvSwGOl7tGq+6lJ/Q8upBateJtjb1paQk+5khhtF86n+S4rjKU
        Y+V7+Rpld0Y8SVT2XdT/AKYdrS/JM4PQSq9dasl2Qjf+aX2I09oL+sfEsKWwZf7k/D3fsWLLtG8roWca
        alJfFPrPvV9S5JESpdVJ6vwLa32bb0c4xxfN5v8AewlyOTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH//Z
</value>
  </data>
</root>